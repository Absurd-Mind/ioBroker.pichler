{
  "version": 3,
  "sources": ["../src/main.ts"],
  "sourcesContent": ["/*\n * Created with @iobroker/create-adapter v2.6.3\n */\n\n// The adapter-core module gives you access to the core ioBroker functions\n// you need to create an adapter\nimport * as utils from \"@iobroker/adapter-core\";\nimport axios from \"axios\";\nimport cheerio, { CheerioAPI } from \"cheerio\";\n\n\n// Load your modules here, e.g.:\n// import * as fs from \"fs\";\n\nclass Pichlerconnect extends utils.Adapter {\n\n\tscanIntervall: ioBroker.Interval | undefined = undefined;\n\n\tpublic constructor(options: Partial<utils.AdapterOptions> = {}) {\n\t\tsuper({\n\t\t\t...options,\n\t\t\tname: \"pichlerconnect\",\n\t\t});\n\t\tthis.on(\"ready\", this.onReady.bind(this));\n\t\tthis.on(\"stateChange\", this.onStateChange.bind(this));\n\t\t// this.on(\"objectChange\", this.onObjectChange.bind(this));\n\t\t// this.on(\"message\", this.onMessage.bind(this));\n\t\tthis.on(\"unload\", this.onUnload.bind(this));\n\t}\n\n\t/**\n\t * Is called when databases are connected and adapter received configuration.\n\t */\n\tprivate async onReady(): Promise<void> {\n\n\t\tawait this.setObjectNotExistsAsync(\"ph\", {\n\t\t\ttype: \"state\",\n\t\t\tcommon: {\n\t\t\t\tname: \"PH\",\n\t\t\t\ttype: \"number\",\n\t\t\t\trole: \"value\",\n\t\t\t\tread: true,\n\t\t\t\twrite: false,\n\t\t\t},\n\t\t\tnative: {},\n\t\t});\n\n\t\tawait this.setObjectNotExistsAsync(\"redox\", {\n\t\t\ttype: \"state\",\n\t\t\tcommon: {\n\t\t\t\tname: \"Redox\",\n\t\t\t\ttype: \"number\",\n\t\t\t\trole: \"value\",\n\t\t\t\tread: true,\n\t\t\t\twrite: false,\n\t\t\t\tunit: \"mV\"\n\t\t\t},\n\t\t\tnative: {},\n\t\t});\n\n\t\tawait this.setObjectNotExistsAsync(\"flow\", {\n\t\t\ttype: \"state\",\n\t\t\tcommon: {\n\t\t\t\tname: \"Flow active\",\n\t\t\t\ttype: \"boolean\",\n\t\t\t\trole: \"indicator\",\n\t\t\t\tread: true,\n\t\t\t\twrite: false,\n\t\t\t},\n\t\t\tnative: {},\n\t\t});\n\n\t\tawait this.setObjectNotExistsAsync(\"level_ph\", {\n\t\t\ttype: \"state\",\n\t\t\tcommon: {\n\t\t\t\tname: \"level ph\",\n\t\t\t\ttype: \"number\",\n\t\t\t\trole: \"value\",\n\t\t\t\tread: true,\n\t\t\t\twrite: false,\n\t\t\t\tunit: \"%\"\n\t\t\t},\n\t\t\tnative: {},\n\t\t});\n\n\t\tawait this.setObjectNotExistsAsync(\"level_redox\", {\n\t\t\ttype: \"state\",\n\t\t\tcommon: {\n\t\t\t\tname: \"level redox\",\n\t\t\t\ttype: \"number\",\n\t\t\t\trole: \"value\",\n\t\t\t\tread: true,\n\t\t\t\twrite: false,\n\t\t\t\tunit: \"%\"\n\t\t\t},\n\t\t\tnative: {},\n\t\t});\n\n\t\tthis.log.debug(`starting adapter with config: ${JSON.stringify(this.config)}`);\n\n\t\tawait this.fetchData();\n\n\t\tthis.scanIntervall = this.setInterval(\n\t\t\t() => this.fetchData(),\n\t\t\t(this.config.interval * 1000)\n\t\t);\n\t}\n\n\tprivate async fetchData(): Promise<void>  {\n\t\tthis.log.debug(\"fetching data\");\n\t\tconst $ = await this.getHtml(this.config.host, this.config.port);\n\t\tif ($) {\n\t\t\tthis.log.debug(\"parsing data\");\n\n\t\t\tawait this.setStateAsync(\"ph\", parseFloat($(\"table\").eq(9).find(\"td\").eq(4).find(\"b\").text().trim()), true);\n\t\t\tawait this.setStateAsync(\"redox\", parseInt($(\"table\").eq(11).find(\"td\").eq(4).find(\"b\").text().trim()), true);\n\t\t\tawait this.setStateAsync(\"flow\", $(\"table\").eq(13).find(\"td\").eq(4).find(\"b\").text().trim() == \"An\", true);\n\n\t\t\tawait this.setStateAsync(\"level_ph\", parseFloat($(\"table\").eq(19).find(\"td\").eq(4).find(\"b\").text().trim()), true);\n\t\t\tawait this.setStateAsync(\"level_redox\", parseFloat($(\"table\").eq(21).find(\"td\").eq(4).find(\"b\").text().trim()), true);\n\t\t}\n\t}\n\n\tprivate async getHtml(host: string, port: number): Promise<CheerioAPI | null> {\n\t\tconst url = `http://${host}:${port}/commandPage?COMMAND=values`;\n\t\ttry {\n\t\t\tconst response = await axios.get(url);\n\t\t\t\n\t\t\tif (response.status === 200) {\n\t\t\t\tconst html = response.data;\n\t\t\t\treturn cheerio.load(html);\n\t\t\t} else {\n\t\t\t\tthis.log.error(`HTTP Request failed with status code ${response.status}`);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tthis.log.error(`Error fetching or parsing HTML: ${error}`);\n\t\t}\n\t\treturn null;\n\t}\n\n\t/**\n\t * Is called when adapter shuts down - callback has to be called under any circumstances!\n\t */\n\tprivate onUnload(callback: () => void): void {\n\t\ttry {\n\t\t\tthis.clearInterval(this.scanIntervall);\n\n\t\t\tcallback();\n\t\t} catch (e) {\n\t\t\tcallback();\n\t\t}\n\t}\n\n\t// If you need to react to object changes, uncomment the following block and the corresponding line in the constructor.\n\t// You also need to subscribe to the objects with `this.subscribeObjects`, similar to `this.subscribeStates`.\n\t// /**\n\t//  * Is called if a subscribed object changes\n\t//  */\n\t// private onObjectChange(id: string, obj: ioBroker.Object | null | undefined): void {\n\t// \tif (obj) {\n\t// \t\t// The object was changed\n\t// \t\tthis.log.info(`object ${id} changed: ${JSON.stringify(obj)}`);\n\t// \t} else {\n\t// \t\t// The object was deleted\n\t// \t\tthis.log.info(`object ${id} deleted`);\n\t// \t}\n\t// }\n\n\t/**\n\t * Is called if a subscribed state changes\n\t */\n\tprivate onStateChange(id: string, state: ioBroker.State | null | undefined): void {\n\t\tif (state) {\n\t\t\t// The state was changed\n\t\t\tthis.log.info(`state ${id} changed: ${state.val} (ack = ${state.ack})`);\n\t\t} else {\n\t\t\t// The state was deleted\n\t\t\tthis.log.info(`state ${id} deleted`);\n\t\t}\n\t}\n\n\t// If you need to accept messages in your adapter, uncomment the following block and the corresponding line in the constructor.\n\t// /**\n\t//  * Some message was sent to this instance over message box. Used by email, pushover, text2speech, ...\n\t//  * Using this method requires \"common.messagebox\" property to be set to true in io-package.json\n\t//  */\n\t// private onMessage(obj: ioBroker.Message): void {\n\t// \tif (typeof obj === \"object\" && obj.message) {\n\t// \t\tif (obj.command === \"send\") {\n\t// \t\t\t// e.g. send email or pushover or whatever\n\t// \t\t\tthis.log.info(\"send command\");\n\n\t// \t\t\t// Send response in callback if required\n\t// \t\t\tif (obj.callback) this.sendTo(obj.from, obj.command, \"Message received\", obj.callback);\n\t// \t\t}\n\t// \t}\n\t// }\n}\n\nif (require.main !== module) {\n\t// Export the constructor in compact mode\n\tmodule.exports = (options: Partial<utils.AdapterOptions> | undefined) => new Pichlerconnect(options);\n} else {\n\t// otherwise start the instance directly\n\t(() => new Pichlerconnect())();\n}\n"],
  "mappings": "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",
  "names": ["axios", "cheerio"]
}
